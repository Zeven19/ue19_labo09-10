# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: [ubuntu-latest, windows]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
- name: Aqua Security Trivy

  # You may pin to the exact commit or the version.
  # uses: aquasecurity/trivy-action@2b6a709cf9c4025c5438138008beaddbb02086f0
 - uses: aquasecurity/trivy-action@0.14.0
  with:
    # Scan type to use for scanning vulnerability
    scan-type: # optional, default is image
    # image reference(for backward compatibility)
    image-ref: # optional
    # reference of tar file to scan
    input: # optional, default is 
    # Scan reference
    scan-ref: # optional, default is .
    # exit code when vulnerabilities were found
    exit-code: # optional
    # ignore unfixed vulnerabilities
    ignore-unfixed: # optional, default is false
    # comma-separated list of vulnerability types (os,library)
    vuln-type: # optional, default is os,library
    # severities of vulnerabilities to be displayed
    severity: # optional, default is UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
    # output format (table, json, template)
    format: # optional, default is table
    # use an existing template for rendering output (@/contrib/gitlab.tpl, @/contrib/junit.tpl, @/contrib/html.tpl)
    template: # optional, default is 
    # writes results to a file with the specified file name
    output: # optional, default is 
    # comma separated list of directories where traversal is skipped
    skip-dirs: # optional, default is 
    # comma separated list of files to be skipped
    skip-files: # optional, default is 
    # specify where the cache is stored
    cache-dir: # optional, default is 
    # timeout (default 5m0s)
    timeout: # optional, default is 
    # filter vulnerabilities with OPA rego language
    ignore-policy: # optional, default is 
    # hide progress output
    hide-progress: # optional
    # output all packages regardless of vulnerability
    list-all-pkgs: # optional, default is false
    # comma-separated list of what security issues to detect
    scanners: # optional, default is 
    # comma-separated list of relative paths in repository to one or more .trivyignore files
    trivyignores: # optional, default is 
    # input artifact type (image, fs, repo, archive) for SBOM generation
    artifact-type: # optional
    # GitHub Personal Access Token (PAT) for submitting SBOM to GitHub Dependency Snapshot API
    github-pat: # optional
    # path to trivy.yaml config
    trivy-config: # optional
    # limit severities for SARIF format
    limit-severities-for-sarif: # optional
